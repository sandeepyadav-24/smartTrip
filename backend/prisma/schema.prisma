// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init






generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(uuid()) // Firebase UID
  name          String
  email         String       @unique
  phoneNumber   String?
  address       String?
  dateOfBirth   DateTime?
  createdAt     DateTime     @default(now())

  additionalEmails UserEmail[]
  bookings         Booking[]
}

model UserEmail {
  id        Int     @id @default(autoincrement())
  email     String
  isPrimary Boolean @default(false)

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model Hotel {
  id             String   @id @default(uuid())
  name           String
  location       String
  description    String
  pricePerNight  Float
  amenities      String   
  rating         Float?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  bookings  Booking[] 
}


model Flight {
  id               Int      @id @default(autoincrement())
  flightNumber     String
  airline          String
  departureAirport String
  arrivalAirport   String
  departureTime    DateTime
  arrivalTime      DateTime
  price            Float
  duration         String
  seatsAvailable   Int
  createdAt        DateTime @default(now())

  bookings         Booking[]
}

enum BookingType {
  flight
  hotel
}

model Booking {
  id         String         @id @default(uuid())
  type       BookingType
  status     String      @default("confirmed")
  createdAt  DateTime    @default(now())

  // relations
  user   User   @relation(fields: [userId], references: [id])
  userId String

  // optional FK fields for polymorphic item reference
  hotel   Hotel? @relation(fields: [hotelId], references: [id])
  

  flight   Flight? @relation(fields: [flightId], references: [id])
  flightId Int?

  // for hotel
  checkIn   DateTime?
  checkOut  DateTime?

  // for flight
  seatNumber String?
  hotelId    String
}
